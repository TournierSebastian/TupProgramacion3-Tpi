// <auto-generated />
using ApplicationWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationWeb.Migrations
{
    [DbContext(typeof(TiendaContext))]
    [Migration("20231105214328_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationWeb.Data.Dto.DtoProducts", b =>
                {
                    b.Property<int>("idProducts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProducts"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("idProducts");

                    b.ToTable("DtoProducts");
                });

            modelBuilder.Entity("ApplicationWeb.Data.Dto.DtoSellOrder", b =>
                {
                    b.Property<int>("idOrder")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idOrder"));

                    b.Property<string>("PayMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductidProducts")
                        .HasColumnType("int");

                    b.HasKey("idOrder");

                    b.HasIndex("ProductidProducts");

                    b.ToTable("DtoSellOrders");
                });

            modelBuilder.Entity("ApplicationWeb.Data.Dto.DtoUser", b =>
                {
                    b.Property<int>("idUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUser"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUser");

                    b.ToTable("DtoUsers");

                    b.HasDiscriminator<string>("UserType").HasValue("DtoUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ApplicationWeb.Data.Entities.Products", b =>
                {
                    b.Property<int>("idProducts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProducts"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("idProducts");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ApplicationWeb.Data.Models.DtoAdmin", b =>
                {
                    b.HasBaseType("ApplicationWeb.Data.Dto.DtoUser");

                    b.HasDiscriminator().HasValue("DtoAdmin");
                });

            modelBuilder.Entity("ApplicationWeb.Data.Models.DtoCustomer", b =>
                {
                    b.HasBaseType("ApplicationWeb.Data.Dto.DtoUser");

                    b.HasDiscriminator().HasValue("DtoCustomer");
                });

            modelBuilder.Entity("ApplicationWeb.Data.Models.DtoSuperAdmin", b =>
                {
                    b.HasBaseType("ApplicationWeb.Data.Dto.DtoUser");

                    b.HasDiscriminator().HasValue("DtoSuperAdmin");
                });

            modelBuilder.Entity("ApplicationWeb.Data.Dto.DtoSellOrder", b =>
                {
                    b.HasOne("ApplicationWeb.Data.Entities.Products", "Product")
                        .WithMany()
                        .HasForeignKey("ProductidProducts")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
